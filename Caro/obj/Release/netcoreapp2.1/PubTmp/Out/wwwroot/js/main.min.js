let boardMap;const boadWidth=600,cellWith=30,lineWidth=2,lineColor="#BDBDBD",offset=1,size=28,X=2,O=3;let test1=[{i:-4,j:-4},{i:-3,j:-3},{i:-2,j:-2},{i:-1,j:-1},{i:0,j:0},{i:1,j:1},{i:2,j:2},{i:3,j:3},{i:4,j:4}],test2=[{i:-4,j:4},{i:-3,j:3},{i:-2,j:2},{i:-1,j:1},{i:0,j:0},{i:1,j:-1},{i:2,j:-2},{i:3,j:-3},{i:4,j:-4}],test3=[{i:-4,j:0},{i:-3,j:0},{i:-2,j:0},{i:-1,j:0},{i:0,j:0},{i:1,j:0},{i:2,j:0},{i:3,j:0},{i:4,j:0}],test4=[{i:0,j:-4},{i:0,j:-3},{i:0,j:-2},{i:0,j:-1},{i:0,j:0},{i:0,j:1},{i:0,j:2},{i:0,j:3},{i:0,j:4}],canvas=document.getElementById("drawing"),context=canvas.getContext("2d");function drawBoad(){context.clearRect(0,0,canvas.width,canvas.height),context.beginPath();for(let a=0;a<=boadWidth;a+=cellWith)context.moveTo(0,a+offset),context.lineTo(boadWidth,a+offset);for(let a=0;a<=boadWidth;a+=cellWith)context.moveTo(a+offset,0),context.lineTo(a+offset,boadWidth);context.lineWidth=lineWidth,context.strokeStyle=lineColor,context.stroke(),context.closePath();for(let a=4;28>a;a++)for(let b=4;28>b;b++){let c={i:a,j:b},d=boardMap[c.i][c.j];d===X?drawX(c):d===O&&drawO(c)}}function getCursorPosition(a,b){let c=a.getBoundingClientRect();return{x:b.clientX-c.left,y:b.clientY-c.top}}function checkValidPosision(a){let b=a.x,c=a.y;for(let d=0;d<=boadWidth;d+=cellWith){let f=d-1,g=d+offset+1;if(b>=f&&b<=g||c>=f&&c<=g)return!1}return!0}function mapBoardPositionToMatrixPosition(a){return{i:parseInt(a.y/cellWith)+4,j:parseInt(a.x/cellWith)+4}}function mapMatrixPositionToBoardPosition(a){return{x:(a.j-4)*cellWith,y:(a.i-4)*cellWith}}function drawX(a){let b=mapMatrixPositionToBoardPosition(a);context.beginPath(),context.moveTo(b.x+8+lineWidth,b.y+8+lineWidth),context.lineTo(b.x+22,b.y+22),context.moveTo(b.x+22,b.y+8+lineWidth),context.lineTo(b.x+8+lineWidth,b.y+22),context.lineWidth=5,context.strokeStyle="red",context.lineCap="round",context.stroke(),context.closePath()}function drawO(a){let b=mapMatrixPositionToBoardPosition(a);let d=b.x+16,f=b.y+16;context.beginPath(),context.arc(d,f,8,0,2*Math.PI,!1),context.lineWidth=5,context.strokeStyle="green",context.stroke(),context.closePath()}function checkGame(a,b,c){let d;for(let f=0;5>f;f++){d=0;for(let g=f;g<f+5;g++)2===c[a+test1[g].i][b+test1[g].j]&&d++;if(5===d)return!0}for(let f=0;5>f;f++){d=0;for(let g=f;g<f+5;g++)2===c[a+test2[g].i][b+test2[g].j]&&d++;if(5===d)return!0}for(let f=0;5>f;f++){d=0;for(let g=f;g<f+5;g++)2===c[a+test3[g].i][b+test3[g].j]&&d++;if(5===d)return!0}for(let f=0;5>f;f++){d=0;for(let g=f;g<f+5;g++)2===c[a+test4[g].i][b+test4[g].j]&&d++;if(5===d)return!0}return!1}function canvasClick(a){let b=getCursorPosition(canvas,a);if(checkValidPosision(b)){let c=mapBoardPositionToMatrixPosition(b);boardMap[c.i][c.j]=X,connection.invoke("PlayerCompletesTurn",boardMap),checkGame(c.i,c.j,boardMap)&&connection.invoke("IWon",c.i,c.j,boardMap),drawBoad(),lockBoard(),document.getElementById("direction").innerHTML="Opponent turn"}}function lockBoard(){canvas.removeEventListener("click",canvasClick)}function unlockBoard(){canvas.addEventListener("click",canvasClick)}let connection=new signalR.HubConnectionBuilder().withUrl("/CaroHub").build();connection.on("CreateBoard",a=>{boardMap=a,drawBoad()}),connection.on("UpdateBoardMap",a=>{boardMap=a,drawBoad(),unlockBoard(),document.getElementById("direction").innerHTML="Your turn"}),connection.on("ConfirmApponentWin",(a,b,c)=>{checkGame(a,b,c)?connection.invoke("ApponentWon"):connection.invoke("ApponentDidnotWin",a,b,c)}),connection.on("YouCheat",()=>{alert("You cheated"),lockBoard()}),connection.on("YouLose",()=>{alert("You lose"),lockBoard()}),connection.on("YouWon",()=>{alert("You won"),lockBoard()}),connection.on("StartGameNow",a=>{!0===a?(document.getElementById("direction").innerHTML="You first",unlockBoard()):document.getElementById("direction").innerHTML="Opponent first"}),connection.on("WaitForFindingOpponent",()=>{document.getElementById("direction").innerHTML="Please wait for finding opponent"}),connection.on("UpdateGroup",a=>{let b=document.getElementById("rooms");b.innerHTML="";let c=a.length;for(let d=0;d<c;d++){let f=document.createElement("li"),g=document.createTextNode(a[d]);f.appendChild(g),b.appendChild(f)}}),connection.start().catch(a=>console.error(a)),document.getElementById("btn-register").addEventListener("click",()=>{let b=document.getElementById("txt-username").value;return""===b?void(document.getElementById("validate-for-username").innerHTML="Username is not valid"):void connection.invoke("SomeoneRegister",b)});